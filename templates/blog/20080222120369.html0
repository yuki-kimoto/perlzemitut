<ol class="bread" itemscope itemtype="http://schema.org/BreadcrumbList">
  <li itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem">
    <a itemprop="item" href="/">
        <span itemprop="name">Perl</span></a>
    <meta itemprop="position" content="1" />
  </li>
  &#8250;
  <li itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem">
    <a itemprop="item" href="/blog/20161005147566.html">
      <span itemprop="name">演算子</span></a>
    <meta itemprop="position" content="2" />
  </li>
  &#8250;
  <li>
      <span itemprop="name">here</span>
  </li>
</ol>
<h2>文字列リスト演算子 - qw()</h2>



<a href="/blog/20161003147558.html">文字列</a>の<a href="/blog/20100308126967.html">リスト</a>を簡潔に記述するための<strong>文字列リスト演算子</strong>と呼ばれる演算子があります。文字列リスト演算子を使用するとシングルクォートやカンマを記述することなく文字列のリストを表現できます。

<pre>
qw(文字列1 文字列2 文字列3)
</pre>

実際に文字列リスト演算子を使用した例です。

<pre>
my @strings = qw/cat dog mouse/; 
</pre>

次の文字列のリストと同じ意味になります。

<pre>
my @strings = ('cat', 'dog', 'mouse');
</pre>

文字列を囲む記号には()以外の文字も使用することができます。

<pre>
qw(cat dog mouse)
qw/cat dog mouse/;
qw{cat dog mouse}
qw#cat dog mouse#
qw[cat dog mouse]
qw!cat dog mouse!
</pre>

<h3>サンプルプログラム</h3>

文字列リスト演算子を使用したサンプルプログラムです。

<pre>
use strict;
use warnings;

# 文字列リスト演算子
my @strings = qw/cat dog mouse/; # ('cat', 'dog', 'mouse') と同じ意味
print "1: 文字列リスト\n";
print join(',', @strings) . "\n";
</pre>

参考:<a href="/blog/20081007122338.html">join関数</a>

<h3>参考「Perlの配列」</h3>

Perlの「配列」についての解説は以下をご覧ください。

<ul>
  <li>
    <a href="/blog/20161012147627.html">Perlの「配列」を理解しよう</a>
  </li>
</ul>

