<script>location.href='https://dbix-custom.perlzemi.com/blog/20110816131802.html';</script>
<ol class="bread" itemscope itemtype="http://schema.org/BreadcrumbList">
  <li itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem">
    <a itemprop="item" href="/">
        <span itemprop="name">Perl</span></a>
    <meta itemprop="position" content="1" />
  </li>
  &#8250;
  <li itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem">
    <a itemprop="item" href="/blog/20091116124667.html">
        <span itemprop="name">モジュール</span></a>
    <meta itemprop="position" content="2" />
  </li>
  &#8250;
  <li itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem">
    <a itemprop="item" href="/blog/20170130148603.html">
      <span itemprop="name">データベース</span></a>
    <meta itemprop="position" content="3" />
  </li>
  &#8250;
  <li itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem">
    <a itemprop="item" href="/blog/20110401130559.html">
      <span itemprop="name">DBIx::Custom</span></a>
    <meta itemprop="position" content="4" />
  </li>
  &#8250;
  <li>
    here
  </li>
</ol>
<h2>DBIx::Customで「モデル」を利用する</h2>




DBIx::Customで「モデル」を利用する方法を解説します。

<h3>モデルを生成する - create_model</h3>

モデルを作成するには<strong>create_model</strong>メソッドを使用します。

<pre>
$dbi->create_model(
  table => 'book',
  primary_key => 'id',
  join => [
    'left outer join company on book.company_id = company.id'
  ],
  ctime => 'ctime',
  mtime => 'mtime'
);
</pre>
    
モデルには、「<b>table</b> - テーブル名」「<b>primary_key</b> - プライマリーキー」「<b>join</b> - join節」「<b>ctime</b> - 作成日時」「<b>mtime</b> - 更新日時」などを設定しておくことができます。

これらはモデルから<b>insert</b>,<b>update</b>,<b>delete</b>,<b>select</b>メソッドを呼び出したときに自動的に利用されるようになります。

<h4>モデルの取得</h4>

作成したモデルは<b>model</b>メソッドでテーブル名を指定して取得することができます。

<pre>
my $book_model = $dbi->model('book');
</pre>

モデルは<b>DBIx::Custom::Model</b>オブジェクトです。モデルからは<b>DBIx::Custom::Model</b>が持つメソッドと、DBIx::Customが持つ全てのメソッドを呼び出すことができます。

<h4>モデルの利用</h4>

モデルではinsert,update,delete,select,countなどのメソッドを利用することができます。table、primary_key、joinといったオプションを省略することができ記述が簡潔になります。

<pre>
my $result = $model->select(
  column => [
    {company => [qw/name/]}
  ]
);
</pre>

またモデルからはDBIx::CustomあるいはDBIのすべてのメソッドを呼び出すことが可能です。

<h3>外部定義したモデルの取り込み - include_model</h3>

外部で定義したモデルを、プログラムに取り込むにはinclude_modelメソッドを使用します。DBIx::Customではプログラムが大きくなってきたときに、モデルを外部に定義し、保守性を高めることができます。

<pre>
$dbi->include_model('MyModel');
</pre>

この例ではMyModelという名前空間以下に属するすべてのモデルを取り込みます。またMyModelという名前のモジュールが必要であることにも注意してください。

<pre>
lib / MyModel.pm
    / MyModel / book.pm
              / company.pm
</pre>

<h4>モデルのサンプル</h4>

<b>MyModel</b>

MyModelは一般的には次のようになります。DBIx::Custom::Modelを継承するようにします。

<pre>
package MyModel;
use DBIx::Custom::Model -base;

1;
</pre>

<b>-base</b>オプションは継承のためのオプションで、<b>Object::Simple</b>から引き継いでいます。

<b>MyModel::book</b>

MyModel::bookは次のようになります。MyModelを継承するようにします。

<pre>
has primary_key => 'book_id';
has ctime => 'created_time';
has mtime => 'modified_time';

has join => sub {
  [
    'left join company on book.company_id = company.id',
    'left join author on book.author_id = author.id'
  ]
}

1;
</pre>

<b>has</b>は属性を定義するためのメソッドで、<b>Object::Simple</b>の機能です。

<h3>モデルをセットアップする - setup_model</h3>

モデルをセットアップするには<strong>setup_model</strong>を使用します。データベースのテーブル情報を調べて、モデル(DBIx::Custom::Model)のcolumnsに列名が自動的に設定されます。

<pre>
$dbi->setup_model;
</pre>

DBIx::Custom::Modelの<b>columns</b>属性が設定されていれば、DBIx::Custom::Modelの<b>mycolumn</b>メソッドを使って、テーブルに含まれるすべての列を含むcolumn節を生成できます。

<pre>
my $book_model = $dbi->model('book');
my $column_clause = $book_model->mycolumn;
</pre>
  
すべての列を含む次のようなcolumn節が生成されます。

<pre>
book.author as author,
book.title as title,
book.price as price
</pre>

また列名を指定しないで、DBIx::Customの<b>column</b>メソッドを使うこともできます。

<pre>
my $column_clause = $dbi->column('book');
</pre>

次のようなすべての列を含むcolumn節が生成されます。

<pre>
book.author as "book.author",
book.title as "book.title",
book.price as "book.price"
</pre>

<h3>モデルを取得する - model</h3>

<strong>model</strong>メソッドを使って、create_modelメソッドやinclude_modelメソッドで作成したモデルを取得することができます。

<pre>
my $model = $dbi->model('book');
</pre>

