<ol class="bread" itemscope itemtype="http://schema.org/BreadcrumbList">
  <li itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem">
    <a itemprop="item" href="/">
        <span itemprop="name">Perl</span></a>
    <meta itemprop="position" content="1" />
  </li>
  &#8250;
  <li itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem">
    <a itemprop="item" href="/blog/20161022147731.html">
        <span itemprop="name">構文</span></a>
    <meta itemprop="position" content="2" />
  </li>
  &#8250;
  <li itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem">
      <span itemprop="name">here</span>
  </li>
</ol>
<h2>unless修飾子 - 後置のunless</h2>



<b>unless修飾子</b>を使うとunlessを後置することができます。

<pre>
文 unless 条件;
</pre>

unless修飾子を使ったサンプルです。$numが定義されていない場合に、「$num」に1を代入するという処理を行っています。

<pre>
$num = 1 unless defined $num;
</pre>

一行で書ける簡単な条件のときはunless修飾子を使うメリットがあります。 「next unless 条件」「last unless 条件」などがよく利用されます。

<h4>unless修飾子のメリット</h4>

通常の<a href="/blog/20100125126425.html">unless文</a>と比べてunless修飾子のメリットはパフォーマンスです。unless文は<a href="/blog/20110128130016.html">スコープ</a>を作るのに対して、unless修飾子はスコープを作りません。そのためunless修飾子の方がパフォーマンスがよいです。

<h4>if修飾子</h4>

unless修飾子と同じように後置することができるif修飾子というものがあります。

<pre>
$num1 = 1 if defined $num1;
</pre>

if修飾子については以下で詳しく解説しています。

<ul>
  <li>
    <a href="/blog/20080324120637.html">if修飾子 - 後置のif</a>
  </li>
</ul>

<h3>サンプル</h3>

unless修飾子のサンプルです。

<pre>
use strict;
use warnings;

# 後置のunless
print "1: 後置のunlessの例\n";
my $num1;
$num1 = 1 unless defined $num1;
print "\$num1 = $num1\n";

my $num2 = 10;
$num2 = 2 unless defined $num2;
print "\$num2 = $num2\n";
</pre>

実行結果

<pre>
1: 後置のunlessの例
$num1 = 1
$num2 = 10
</pre>
