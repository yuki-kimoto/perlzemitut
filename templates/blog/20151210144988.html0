
<h2>Validator::Custom::Validation - バリデーションの結果</h2>

<h3> 名前</h3>

Validator::Custom::Validation - バリデーションの結果

<h3> 使い方</h3>

<pre>
  my $validation = $vc->validation;
  
  $validation->add_failed(title => 'title is invalid');
  $validation->add_failed(name => 'name is invalid');
  
  # 正しいか
  my $is_valid = $validation->is_valid;
  my $title_is_valid = $validation->is_valid('title');
  
  # 失敗したパラメーターの名前
  my $failed = $validation->failed;
  
  # メッセージ
  my $messages = $validation->messages;
  my $title_message = $validation->message('title');
  my $messages_h = $validation->messages_to_hash;
</pre>

=====

<h3> メソッド</h3>

Validator::Custom::Validationは<a href="http://search.cpan.org/dist/Object-Simple/lib/Object/Simple.pm">Object::Simple</a>からすべてのメソッドを継承しており、次の新しいメソッドを実装しています。

<h4> new</h4>

<pre>
  my $validation = Validator::Custom::Validation->new;
</pre>

新しいValidator::Custom::Validationオブジェクトを生成します。

一般的にはこのメソッドは利用されません。<a href="/blog/20151212144988.html">Validator::Custom</a>の<b>validation</b>メソッドを使うのがよいでしょう。

<pre>
  my $validation = $vc->validation;
</pre>

<h4> is_valid</h4>

<pre>
  my $is_valid = $validation->is_valid;
  my $is_valid = $validation->is_valid('title');
</pre>

バリデーションの結果が正しいかどうかをチェックします。もし名前が与えられた場合は、その名前に対応するパラメータが正しいかどうかをチェックします。

<h4> add_failed</h4>

<pre>
  $validation->add_failed('title' => 'title is invalid value');
  $validation->add_failed('title');
</pre>

失敗したパラメーターの名前とメッセージを追加します。もし、メッセージが省略されれば、デフォルトのメッセージが自動的に設定されます。

<h4> failed</h4>

<pre>
  my $failed = $validation->failed;
</pre>

すべての失敗したパラメーターの名前を取得します。

<h4> message</h4>

<pre>
  my $message = $validation->message('title');
</pre>

名前に対応する失敗のメッセージを取得します。

<h4> messages</h4>

<pre>
  my $messgaes = $validation->messages;
</pre>

すべての失敗メッセージを取得します。

<h4> messages_to_hash</h4>

<pre>
  my $messages_h = $validation->messages_to_hash;
</pre>

すべての失敗したパラメーター名とメッセージを、ハッシュリファレンスとして取得します。

