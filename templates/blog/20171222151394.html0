<ol class="bread" itemscope itemtype="http://schema.org/BreadcrumbList">
  <li itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem">
    <a itemprop="item" href="/">
        <span itemprop="name">Perl</span></a>
    <meta itemprop="position" content="1" />
  </li>
  &#8250;
  <li itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem">
    <a itemprop="item" href="/blog/20161004147558.html">
      <span itemprop="name">標準関数</span></a>
    <meta itemprop="position" content="2" />
  </li>
  &#8250;
  <li>
    here
  </li>
</ol>
<h2>unpack関数 - パックされたデータを復元する</h2>



unpack関数を使用すると<a href="/blog/20171218151360.html">pack関数</a>でバイナリ形式にパックしたデータを復元することができます。

<pre>
my @values = unpack($format, $packed);
</pre>

第一引数は、フォーマットです。

第二引数はパックされたデータ。

戻り値は、復元されたデータが配列で返されます。

<h4>符号付32bitのバイナリ形式にパックされたデータを復元</h4>

三つの整数が符号付32bitのバイナリ形式にパックされている場合、復元するにはunpack関数を使って以下のようにします。

<pre>
my $packed = pack("l3", 7, 8, 9);

my @values = unpack("l3", $packed);
</pre>

@valuesは(7, 8, 9)という<a href="/blog/20161012147627.html">配列</a>になります。

<h4>浮動小数点を符号付doubleのバイナリ形式にパックされたデータを復元</h4>

三つの浮動小数点が倍精度浮動小数点doubleのバイナリ形式にパックされている場合は、以下のようにして復元します。

<pre>
my $packed = pack("d3", 0.5, 1.2, 5.4);

my @values = unpack("d3", $packed);
</pre>

<h4>エンディアンの変換</h4>

エンディアンの変換については<a href="/blog/20171218151360.html">pack関数</a>で説明しています。

<h3>unpack関数で利用できるフォーマットの一覧。</h3>

unpack関数で利用できるフォーマットの一覧については<a href="/blog/20171218151360.html">pack関数</a>のフォーマット一覧を参考にしてください。

<h3>さらに詳しく</h3>

pack関数についての詳細な情報は公式ドキュメントである<a href="http://perldoc.jp/docs/perl/5.8.8/perlpacktut.pod">packとunpackの入門</a>と<a href="http://perldoc.jp/func/unpack">unpack関数</a>を参考にしてください。

