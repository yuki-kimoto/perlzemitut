<ol class="bread" itemscope itemtype="http://schema.org/BreadcrumbList">
  <li itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem">
    <a itemprop="item" href="/">
        <span itemprop="name">Perl</span></a>
    <meta itemprop="position" content="1" />
  </li>
  &#8250;
  <li itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem">
    <a itemprop="item" href="/blog/20091116124667.html">
      <span itemprop="name">モジュール</span></a>
    <meta itemprop="position" content="2" />
  </li>
  &#8250;
  <li>
    here
  </li>
</ol>
<h2>cpanmによるPerlのローカル環境構築</h2>



cpanmを使ってローカル環境を構築する手順です。迷わない一直線の手順です。 

<h3>cpanmのインストール</h3>

以下のコマンドを個人ユーザで実行してください。

<pre>
# cpanmのインストール
curl -L -O http://xrl.us/cpanm
perl cpanm App::cpanminus
</pre>

cpanmを使うと簡単にローカル環境にCPANモジュールをインストールできるようになります。root権限がない場合はユーザのホームディレクトリ以下のperl5というディレクトリ以下にCPANモジュールがインストールされます。インストールには時間がかかるかもしれませんが、しばらく待ちます。

<h3>モジュールやコマンドを利用するための設定</h3>

インストールしたモジュールやコマンドを利用するには次の設定を「.bashrc」というbashの設定ファイルに追加する必要があります。

<pre>
export PERL_CPANM_OPT="--local-lib=~/perl5"
export PATH=$HOME/perl5/bin:$PATH;
export PERL5LIB=$HOME/perl5/lib/perl5:$PERL5LIB;
</pre>

PERL_CPANM_OPTはcpanmの設定を行うための環境変数です。モジュールをインストールするディレクトリを指定しています。デフォルトで「~/perl5」以下にインストールされるのですが、警告が発生するので明示的に指定します。PATHはインストールされたコマンドを利用するための設定です。たとえばcpanmコマンドが利用できるようになります。PERL5LIBでモジュールのインクルードパスを追加できます。この設定を行うとスクリプトからインストールしたモジュールが利用できるようになります。

次のように「.bashrc」を編集して、上記の記述を追加しましょう。

<pre>
vi ~/.bashrc
</pre>

次にこの設定を反映させます。

<pre>
source ~/.bashrc
</pre>

<h3>モジュールのインストール</h3>

ためしにMojoliciousというモジュールをインストールしてみましょう。

<pre>
cpanm Mojolicious
</pre>

lsコマンドを使って「~/perl5/lib/perl5」というディレクトリにMojoliciousがインストールされていることを確認できます。

<pre>
ls ~/perl5/lib/perl5
</pre>

またモジュールを実際に利用できるかどうかを試してみましょう。コマンドラインから次のコマンドを実行してエラーが出なかったら成功です。

<pre>
perl -MMojolicious -e 1
</pre>

これでローカル環境にモジュールをどんどんインストールすることができます。他のサーバにモジュールを配置したい場合は、アーキテクチャがまったく同じであれば、「~/perl5」をまるまるコピーするだけです。もちろん「.bashrc」の記述も忘れずに行います。Perlでのデプロイ作業はとても簡単ですね。

<h3>cpanmを使って指定したディレクトリにCPANモジュールをインストールする</h3>

cpanmを使って指定したディレクトrにCPANモジュールをインストールするには<b>-L</b>オプションを使用します。

<pre>
cpanm -L extlib DBIx::Custom
</pre>

カレントディレクトリの<b>extlib</b>というディレクトリにDBIx::Customがインストールされます。

<h3>cpanmとcpanfileでバージョンを指定してモジュールをインストールする</h3>

<strong>cpanm</strong>と<strong>cpanfile</strong>を使うと、バージョンを指定してモジュールをインストールすることができます。

<h4>cpanfileの記述</h4>

cpanfileを記述します。cpanfileはモジュールのバージョンを指定するためのファイルです。cpanfileという名前のファイルを作成してください。以下のような記述を行います。

<pre>
requires 'DBI', '== 1.619';
requires 'DBD::SQLite', '== 1.36_04';
requires 'DBIx::Custom', '== 0.25';
</pre>

次のフォーマットで記述します。

<pre>
requires モジュール名 バージョン
</pre>

バージョンには次の表記を使うことができます。

<table>
  <tr>
    <td>
      <b>意味</b>
    </td>
    <td>
      <b>書式</b>
    </td>
    <td>
      <b>サンプル</b>
    </td>
  </tr>

  <tr>
    <td>
      指定したバージョン
    </td>
    <td>
      == バージョン
    </td>
    <td>
      == 0.03
    </td>
  </tr>

  <tr>
    <td>
      指定したバージョン以上
    </td>
    <td>
      バージョンのみ あるいは >= バージョン
    </td>
    <td>
      0.03 あるいは >= 0.03
    </td>
  </tr>

  <tr>
    <td>
      指定したバージョン以下
    </td>
    <td>
      <=
    </td>
    <td>
      <= 0.03
    </td>
  </tr>

  <tr>
    <td>
      指定したバージョンより大きい
    </td>
    <td>
      > バージョン
    </td>
    <td>
      > 0.03
    </td>
  </tr>

  <tr>
    <td>
      指定したバージョンより小さい
    </td>
    <td>
      < バージョン
    </td>
    <td>
      < 0.03
    </td>
  </tr>

</table>

<h4>モジュールのインストール</h4>

cpanmの<strong>--installdeps</strong>オプションを使うと、cpanfileの記述を調べて、モジュールをインストールしてくれます。(ドットがオプションの後ろに続くことに注意)

<pre>
perl cpanm --installdeps .
</pre>

<strong>-L</strong>オプションを使えば、指定したディレクトリにモジュールをインストールすることもできます。

<pre>
perl cpanm -L extlib --installdeps .
</pre>

自分の作成したPerlのアプリケーションが、CPANに存在するモジュールに依存しているときは、cpanmとcpanfileを一緒に含めておくと、ユーザーに簡単に利用してもらうことができます。

