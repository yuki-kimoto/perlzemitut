<ol class="bread" itemscope itemtype="http://schema.org/BreadcrumbList">
  <li itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem">
    <a itemprop="item" href="/">
        <span itemprop="name">Perl</span></a>
    <meta itemprop="position" content="1" />
  </li>
  &#8250;
  <li itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem">
    <a itemprop="item" href="/blog/20161004147558.html">
      <span itemprop="name">標準関数</span></a>
    <meta itemprop="position" content="2" />
  </li>
  &#8250;
  <li>
    here
  </li>
</ol>
<h2>quotemeta関数 - 正規表現文字のエスケープ</h2>



<strong>quotemeta関数</strong>を使用すると、<a href="/blog/20100827127859.html">正規表現</a>で利用される文字列を通常の文字として扱うことができます。ワード文字以外のすべての文字の直前に\がつけられます。

<pre>
# 正規表現文字列を通常の文字として扱う
$ret = quotemeta $str;
</pre>

正規表現文字を含んだ文字列を通常の文字列としてパターンマッチさせるサンプルです。

<pre>
# 正規表現文字を含んだ文字列を通常の文字列としてパターンマッチ
my $message = 'This message contains a{2}';

my $match = "a{2}";
$match = quotemeta $match;

if ($message =~ /$match/) {
  print "Match!\n";
}
</pre>

quotemetaは正規表現の特殊文字である\Qと同じ意味を持ちます。上記のquotemetaは以下の記述と同じ意味にないます。

<pre>
# \Qを使ってquotemetaと同じ意味を表現
my $match = "\Qa{2}";
</pre>

正規表現については<a href="/blog/20100827127859.html">実践で役立つPerl正規表現 完全解説</a>をご覧ください。


