<ol class="bread" itemscope itemtype="http://schema.org/BreadcrumbList">
  <li itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem">
    <a itemprop="item" href="/"><span itemprop="name">Perl</span></a>
    <meta itemprop="position" content="1" />
  </li>
  &#8250;
  <li itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem">
    <a itemprop="item" href="/blog/20161126148016.html"><span itemprop="name">ファイル操作</span></a>
    <meta itemprop="position" content="2" />
  </li>
  &#8250;
  <li itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem">
    <span itemprop="name">here</span>
  </li>
</ol>
<h2>ファイル名からディレクトリ名とベース名を取り出す</h2>



ファイル名から、ディレクトリ名とベース名を取り出すには<a href="/blog/20100225126425.html">File::Basename</a>モジュールの<strong>fileparse</strong>メソッドを使用します。

<pre>
use File::Basename 'fileparse';
my ($base_name, $dir) = fileparse $file;
</pre>

File::Basename モジュールの fileparse関数を使えば、ファイル名を、ディレクトリ名とベース名を分けることができます。戻り値のリストの0番目がベース名、1番目がディレクトリ名で、元の順序と逆なので、注意してください。

File::Basename は、OSに依存しないように作成されています。Unix,Windows,MacOS では、ファイルの区切り文字が異なりますが、問題なく利用できます。

<h3>サンプル</h3>

 ファイル名からディレクトリ名とベース名を取り出すサンプルです。

<pre>
use strict;
use warnings;

# ファイル名からディレクトリ名とベース名を取り出す

use File::Basename 'fileparse';

my $file_unix = 'dir1/dir2/base_name.txt';
my $file_win = 'dir1\\dir2\\base_name.txt';
                               
print "1: ファイル名から、ディレクトリ名とベース名を取り出す。\n";
my ($base_name, $dir) = fileparse $file_unix;
print "Unixの場合\n" .
  "\$dir = $dir\n" .
  "\$base_name = $base_name\n\n";

($base_name, $dir) = fileparse $file_win;
print "Windowsの場合\n" .
  "\$dir = $dir\n" .
  "\$base_name = $base_name\n\n";
      
print "2: ベース名だけ取り出す。\n";
# 配列スライスで,リストの0番目だけを抜き出します。
my $base_name_only = (fileparse $file_unix)[0]; 
print "\$base_name_only = $base_name_only\n\n";
</pre>
実行結果
<pre>
1: ファイル名から、ディレクトリ名とベース名を取り出す。
Unixの場合
$dir = dir1/dir2/
$base_name = base_name.txt

Windowsの場合
$dir = dir1\dir2\
$base_name = base_name.txt

2: ベース名だけ取り出す。
$base_name_only = base_name.txt
</pre>

<hr>
<a href="/blog/20080229120427.html">Perl逆引き辞典</a>
