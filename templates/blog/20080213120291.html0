<ol class="bread" itemscope itemtype="http://schema.org/BreadcrumbList">
  <li itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem">
    <a itemprop="item" href="/">
        <span itemprop="name">Perl</span></a>
    <meta itemprop="position" content="1" />
  </li>
  &#8250;
  <li itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem">
    <a itemprop="item" href="/blog/20161004147558.html">
        <span itemprop="name">標準関数</span></a>
    <meta itemprop="position" content="2" />
  </li>
  &#8250;
  <li>
    here
  </li>
</ol>
<h2>exists関数 - ハッシュのキーの存在確認</h2>



<strong>exists関数</strong>を使用すると<a href="/blog/20161013147635.html">ハッシュ</a>のキーの存在を確認することができます。

<pre>
# ハッシュのキーの存在確認
my $is_exists = exists $hash{$key};
</pre>

ageというキーが存在するかを確認するには以下のようにします。

<pre>
# ageというキーが存在することを確認
my %person = (name => 'Ken', age => 1);
my $is_exists = exists $person{age};
</pre>

<a href="/blog/20180208151809.html">ハッシュのリファレンス</a>の場合には以下のようにすることができます。

<pre>
# キーの存在確認。ハッシュのリファレンスの場合。
my $person = {name => 'Ken', age => 1};
my $is_exists = exists $person->{age};
</pre>

<h4>defined関数との違い</h4>

よく似た関数に<a href="/blog/20100219126425.html">defined関数</a>があります。exists関数がハッシュのキーの存在を調べるのに対して、defined関数は値が定義されているかどうかを調べるのに利用します。

<pre>
my $defined = defined $person{age};
</pre>

<h3>サンプルプログラム</h3>

exists関数でハッシュの要素の状態を調べるサンプルです。

<pre>
use strict;
use warnings;
use Data::Dumper;

# 生徒の数学の点数
my %math_scores = (
  Aiko => 89,
  Kenta => 0,
  Taro => undef
);  

print Dumper \%math_scores;
print "\n";

# 1: キーの存在を確認する exists関数
print "1: キーの存在を確認する\n";
for my $key (qw/Aiko Kenta Taro Masao/) {
  if (exists $math_scores{$key}) {
    print "\$math_scores{$key} は存在します。\n";
  }
  else {
    print "\$math_scores{$key} は存在しません。\n";
  }
} 
</pre>

実行結果

<pre>
%math_scores = (
                 'Aiko' => 89,
                 'Kenta' => 0,
                 'Taro' => undef
               );

1: キーの存在を確認する
$math_scores{Aiko} は存在します。
$math_scores{Kenta} は存在します。
$math_scores{Taro} は存在します。
$math_scores{Masao} は存在しません。
</pre>
