<ol class="bread" itemscope itemtype="http://schema.org/BreadcrumbList">
  <li itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem">
    <a itemprop="item" href="/">
        <span itemprop="name">Perl</span></a>
    <meta itemprop="position" content="1" />
  </li>
  &#8250;  
  <li itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem">
    <a itemprop="item" href="/blog/20161005147566.html">
      <span itemprop="name">演算子</span></a>
    <meta itemprop="position" content="3" />
  </li>
  &#8250;
  <li>
      <span itemprop="name">here</span>
  </li>
</ol>
<h2>qr演算子 - 正規表現のリファレンスを作成する</h2>



「<strong>qr演算子</strong>」で<a href="/blog/20100827127859.html">正規表現</a>のリファレンスを作成することができます。qr演算子を使うと、正規表現をリファレンスとして変数に保存できます。正規表現のオプションも含めて保存できます。正規表現が、コンパイルされるので、繰り返しパターンマッチを行う場合、高速に動作します。

<pre>
# 正規表現のリファレンス
my $regex = qr/\d+/sm;
</pre>

パターンマッチを行うときは//の中に入れることもできますし、そのまま使用することもできます。//の中にいれたほうが少し見やすと思います。

<pre>
# //の中で使用
if ($str =~ /$regex/) {
  ...
}

# そのまま使用
if ($str =~ $regex) {
  ...
}
</pre>

<h3>リファレンスって何?</h3>

リファレンスについては以下の記事で詳しく解説しています。

<ul>
  <li>
    <a href="/blog/20100930127859.html">リファレンス</a>の使い方をマスターしよう
  </li>
</ul>

<h3>サンプル</h3>

正規表現のリファレンスを使ったサンプルです。

<pre>
use strict;
use warnings;

# qr// を使うとオプションも含めて変数に保存できます。
# (gオプションは、指定できません。)
my $word = "ababab";
my $regex = qr/A/i; 
                    
my $replace = 'c';

$word =~ s/$regex/$replace/g; 
print "\$word = $word\n";
</pre>

実行結果。

<pre>
$word = cbcbcb
</pre>
