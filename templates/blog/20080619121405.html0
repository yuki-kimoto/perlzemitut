<ol class="bread" itemscope itemtype="http://schema.org/BreadcrumbList">
  <li itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem">
    <a itemprop="item" href="/">
        <span itemprop="name">Perl</span></a>
    <meta itemprop="position" content="1" />
  </li>
  &#8250;
  <li itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem">
    <a itemprop="item" href="/blog/20161005147566.html">
      <span itemprop="name">演算子</span></a>
    <meta itemprop="position" content="2" />
  </li>
  &#8250;
  <li>
      <span itemprop="name">here</span>
  </li>
</ol>
<h2>ヒアドキュメント - 複数行の文字列を簡単に作成</h2>



<strong>ヒアドキュメント</strong>を用いれば複数の<a href="/blog/20161003147558.html">文字列</a>をわかりやすく記述することができます。

<pre>
my $text = <<'EOS';
aaaa
iiii
uuuu
EOS
</pre>

ヒアドキュメントを用いれば、<<'EOS' と EOS にはさまれた行にある文字列を、改行を維持して文字列に代入することができます。

セミコロンの位置に注意しましょう。最後のEOSのあとには、セミコロンはなくて、 最初の行の最後にセミコロンがあります。 

EOSという部分は任意の文字列で構いません。このサンプルでは「End Of String」という意味でEOSを使っています。

<h4>ヒアドキュメントの中で変数展開する</h4>

<<'EOS' を <<"EOS" に変更すれば、ヒアドキュメントの中で、<a href="/blog/20180228151982.html">変数展開</a>が可能になります。

<pre>
my $message = 'Hello';

# 変数展開可能なヒアドキュメント
my $text = <<"EOS";
aaaa
$message
iiii
uuuu
EOS
</pre>

次のようにダブルクォートを省略しても変数展開がされるヒアドキュメントになりますが、明示的に意味がわかるように、ダブルクォートで囲むのがお勧めです。

<pre>
my $text = <<EOS;
aaaa
$message
iiii
uuuu
EOS
</pre>

<h3>サンプルプログラム</h3>

ヒアドキュメントのサンプルです。

<pre>
use strict;
use warnings;

# ヒアドキュメント

print "1: ヒアドキュメントを使用する。( 変数展開なし )\n";
my $text_no_expand = <<'EOS';
aaaa
iiii
uuuu
EOS

print "$text_no_expand\n";

print "2: ヒアドキュメントを使用する。( 変数展開あり )\n";
my $str = "eeee";
my $text_expand = <<"EOS";
$str
oooo
EOS

print "$text_expand\n";
</pre>
