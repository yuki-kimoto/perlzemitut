<h2>Class::Struct - オブジェクト指向を提供するコアモジュール</h2>

Class::Structは、Perlに<a href="/blog/20161030147778.html">オブジェクト指向</a>の機能を提供する古典的なモジュールです。コンストラクタnewの自動生成、アクセッサの自動生成ができます。アクセッサとは、フィールドの設定・取得を行うためのメソッドのことです。

Perl入門ゼミでは、オブジェクトの基本型として、ハッシュリファレンスを持ち、スカラのアクセッサを提供する方法を解説します。

<h3>xとyというフィールドを持つPointクラスの作成</h3>

Class::Structを使って、xとyというフィールドを持つPointクラスを作成してみましょう。

<pre>
package Point;

use Class::Struct __PACKAGE__, {
  x => '$',
  y => '$',
};
</pre>

<a href="/blog/20090205123287.html">use</a>では、モジュール名の後ろに引数を渡すことができます。

第一引数は、パッケージ名です。この引数で、どのパッケージに対して、コンストラクタやアクセッサを生成するのかを指定します。<a href="/blog/20080425120914.html">__PACKAGE__</a>は、現在のパッケージ名を返す関数で、Pointが返ります。

第二引数は、フィールドを定義した、<a href="/blog/20180208151809.html">ハッシュのリファレンス</a>です。アクセッサが自動生成されます。

<h3>Pointクラスの利用</h3>

Pointクラスを利用してみましょう。先ほどのコードに続けて以下を記述します。

<pre>
package main;

# オブジェクトの生成
my $point = Point->new(x => 1, y => 2);

# フィールドの値をアクセッサを使って取得
my $x = $point->x;
my $y = $point->y;
print "($x, $y)\n";

# フィールドの値をアクセッサを使って設定
$point->x(5);
$point->y(10);
my $x2 = $point->x;
my $y2 = $point->y;
print "($x2, $y2)\n";
</pre>

mainパッケージについては、<a href="/blog/20100419127089.html">パッケージの宣言</a>の記事を参考にしてください。

<h4>コンストラクタnewの呼び出し</h4>

コンストラクタnewを呼び出すことができます。フィールドの値を渡すこともできます。

<pre>
# オブジェクトの生成
my $point = Point->new(x => 1, y => 2);
</pre>

<h4>アクセッサの呼び出し</h4>

値の設定・取得を行うために、アクセッサを呼び出すことができます。

<pre>
# フィールドの値をアクセッサを使って取得
my $x = $point->x;
my $y = $point->y;
print "($x, $y)\n";

# フィールドの値をアクセッサを使って設定
$point->x(5);
$point->y(10);
my $x2 = $point->x;
my $y2 = $point->y;
print "($x2, $y2)\n";
</pre>

<h3>Class::Structで、継承することはできますか?</h3>

Class::Strcutによって作成したクラスを継承することは可能ですが、制限として、フィールドを追加するということはできません。継承を行いたい場合は、フィールドを追加したい場合が、ほとんどですので、できないと考えておくのがよいでしょう。

継承を予定しているのであれば、Perlコア限定なら<a href="/blog/20100203126425.html">bless</a>を使ってオブジェクトを作成します。CPANモジュールを利用する場合は、継承によるフィールド定義の追加をサポートしているモジュールを利用しましょう。

<h3>コンストラクタをオーバライドすることはできますか?</h3>

Class::Strcutでは、対象のクラスにコンストラクタが生成されますので、コンストラクタをオーバーライドすることはできません。

コンストラクタのカスタマイズを予定しているのであれば、Perlコア限定なら<a href="/blog/20100203126425.html">bless</a>を使ってオブジェクトを作成します。CPANモジュールを利用する場合は、コンストラクタのカスタマイズをサポートしているモジュールを利用しましょう。
