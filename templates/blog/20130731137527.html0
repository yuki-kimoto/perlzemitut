<script>location.href="https://mojolicious.perlzemi.com/blog/20130731137527.html";</script>
<ol class="bread" itemscope itemtype="http://schema.org/BreadcrumbList">
  <li itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem">
    <a itemprop="item" href="/">
      <span itemprop="name">Perl</span>
    </a>
    <meta itemprop="position" content="1" />
  </li>
  &#8250;
  <li itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem">
    <a itemprop="item" href="/blog/20140319139520.html">
      <span itemprop="name">Mojolicious</span>
    </a>
    <meta itemprop="position" content="2" />
  </li>
  &#8250;
  <li>
    here
  </li>
</ol>
<h2>ファイルを配置でルーティングを自動生成 - Mojolicious::Plugin::AutoRoute</h2>



<strong>Mojolicious::Plugin::AutoRoute</strong>は、ファイルを配置するだけで、ルーティングを自動的に生成してくれるプラグイン</strong>です。

<blockquote>
<a href="http://search.cpan.org/dist/Mojolicious-Plugin-AutoRoute/lib/Mojolicious/Plugin/AutoRoute.pm">Mojolicious::Plugin::AutoRoute</a>
</blockquote>

テンプレートをファイルとして配置するだけで書くだけで、Webアプリケーションを作成することができます。

「PHPのようにファイル置いただけで動いたら楽だな」と考えている方にピッタリです。

<h3>使い方</h3>

<pre>
# Mojolicious
$self->plugin('AutoRoute');

# Mojolicious::Lite
plugin 'AutoRoute';

# Option
plugin 'AutoRoute', route => $r;
</pre>

「templates」ディレクトリの中に「auto」ディレクトリを作成して、その中にテンプレートを配置してください。

対応したルーティングが自動で生成されます。

<pre>
テンプレート                        ルート
templates/auto/index.html.ep        # /
              /foo.html.ep          # /foo
              /foo/bar.html.ep      # /foo/bar
              /foo/bar/baz.html.ep  # /foo/bar/baz
</pre>

<h3>オプション</h3>

<h4> route</h4>

<pre>
route => $route;
</pre>

必要であれば親のルートの指定できます。これはMojolicious::Routesオブジェクトです。デフォルトは<b>$app->routes</b>です。

<h4> top_dir</h4>

<pre>
top_dir => 'myauto'
</pre>

トップディレクトリの名前。デフォルトは<b>auto</b>ディレクトリです。

<h3>サンプル</h3>

<pre>
use Mojolicious::Lite;

# AutoRoute
plugin 'AutoRoute';

@@ auto/index.html.ep
/

@@ auto/foo.html.ep
/foo

@@ auto/bar.html.ep
/bar

@@ auto/foo/bar/baz.html.ep
/foo/bar/baz

@@ auto/json.html.ep
<%
  $self->render(json => {foo => 1});
  return;
%>
</pre>

