<ol class="bread" itemscope itemtype="http://schema.org/BreadcrumbList">
  <li itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem">
    <a itemprop="item" href="/">
        <span itemprop="name">Perl</span></a>
    <meta itemprop="position" content="1" />
  </li>
  &#8250;
  <li itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem">
    <a itemprop="item" href="/blog/20091116124667.html">
      <span itemprop="name">モジュール</span></a>
    <meta itemprop="position" content="2" />
  </li>
  &#8250;
  <li>
    here
  </li>
</ol>
<h2>Class::Accessor::Fast - アクセサを簡単に作成する</h2>



<strong>Class::Accessor::Fast</strong>はアクセサを簡単に作成するためのモジュールです。アクセサとはオブジェクトの属性にアクセスするためのメソッドのことです。

mk_accessorsメソッドを使用してアクセサを生成することができます。Class::Accessor::Fastを継承してパッケージ名からmk_accesors()を呼び出します。

<pre>
# アクセサの生成
package YourClass;
use base 'Class::Accessor::Fast';

__PACKAGE__->mk_accessors($meth1, $meth2, ...);
</pre>

一般的なクラスのサンプルです。Pointクラスはx()とy()というアクセサを持ちます。Class::Accessor::Fastのnew()はハッシュのリファレンスしか受け取ることしかできないので、ハッシュとハッシュのリファレンスを受け取ることができるようにオーバーライドするのが良いと思います。

<pre>
package Point;

use strict;
use warnings;

use base 'Class::Accessor::Fast';

# アクセサ
__PACKAGE__->mk_accessors(qw/x y/);

# コンストラクタ
sub new {
    my $class = shift;
    
    # 属性
    my $args = ref $_[0] eq 'HASH' ? $_[0] : {@_};
    
    # new()のオーバーライド
    return $class->SUPER::new({
        x => 0,
        y => 0,
        %$args
    });
}
</pre>

このクラスは次のように使用します。

<pre>
my $point = Point->new(x => 1, y => 2);
$point->x(4);
$point->y(5);
</pre>

<h3>Class::Accessor::Fastに関するFAQ</h3>

Q. コンストラクタの引数にハッシュリファレンスではなくハッシュを渡したり、アクセサのデフォルト値を設定したいです。

A. <a href="/blog/20100224126425.html">Object::Simple</a>モジュールでそれらの機能が提供されています。Object::Simpleではコンストラクタにハッシュを渡したり、アクセサのデフォルト値を指定することができます。Class::Accessor::Fastで行いたい場合はサンプルのようにnewをオーバーライドすることで可能になります。

