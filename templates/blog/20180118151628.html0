<ol class="bread" itemscope itemtype="http://schema.org/BreadcrumbList">
  <li itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem">
    <a itemprop="item" href="/">
        <span itemprop="name">Perl</span></a>
    <meta itemprop="position" content="1" />
  </li>
  &#8250;
  <li itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem">
    <a itemprop="item" href="/blog/20161102147817.html">
        <span itemprop="name">特殊変数</span></a>
    <meta itemprop="position" content="2" />
  </li>
  &#8250;
  <li itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem">
      <span itemprop="name">here</span>
    <meta itemprop="position" content="3" />
  </li>
</ol>
<h2>デフォルト変数 $_</h2>



Perlにはデフォルト変数というものが存在します。

<pre>
$_
</pre>

デフォルト変数が利用されるいくつかの例を最初に見てみます。

<h4>grep関数</h4>

<a href="/blog/20100119126425.html">grep関数</a>に渡された配列のそれぞれの要素は、デフォルト変数に代入されます。

<pre>
my @values2 = grep { $_ eq 'cat' } @values1;
</pre>

「$_」はデフォルト変数であり、@values1のそれぞれの要素が順番に代入されます。

これは、英語の代名詞「it」を表現していると考えるとわかりやすいです。

<h4>map関数</h4>

<a href="/blog/20100118126425.html">map関数</a>に渡された配列のそれぞれの要素は、デフォルト変数に代入されます。

<pre>
my @values2 = map { lc $_  } @values1;
</pre>

<h4>forでレキシカル変数の宣言が省略された場合</h4>

forでレキシカル変数の宣言が省略された場合は、配列のそれぞれの要素がデフォルト変数に代入されます。

<pre>
for (@values) {
  print "$_\n";
}
</pre>

<h4>後置のfor</h4>

後置のforを使った場合、配列のそれぞれの要素は、デフォルト変数に代入されます。

<pre>
print "$_\n" for @values;
</pre>

<h4>while文でダイヤモンド演算子を単独で使用した場合</h4>

<a href="/blog/20100123126425.html">while文</a>で<a href="http://d.hatena.ne.jp/perlcodesample/comment/20080722/1216737340">ダイヤモンド演算子</a>を単独で使用した場合は、各行がデフォルト引数に順番に代入されます。

<pre>
while (<>) {
  print "$_\n";
}
</pre>

この上記の利用方法が、頻繁に目にするデフォルト変数の利用方法です。

<h3>標準関数における暗黙の引数</h3>

<a href="/blog/20161004147558.html">Perlの標準関数</a>には、引数を省略すると、暗黙の引数として、デフォルト変数を使用するものがあります。

これは、自分で記述するときは、可読性が下がるので避けたほうがよい書き方です。

たとえば<a href="/blog/20100326127089.html">lc関数</a>で引数を省略した場合は、デフォルト変数が暗黙の引数になります。

<pre>
my @values2 = map { lc } @values1;
</pre>

これは、明示的にデフォルト引数を書いたときと同じ意味になります。

<pre>
my @values2 = map { lc $_  } @values1;
</pre>

標準関数で引数が省略されていた場合は、暗黙の引数が利用されているのではないかと疑ってみましょう。

<h3>正規表現における暗黙のターゲット</h3>

<a href="/blog/20100827127859.html">正規表現</a>のパターンマッチ演算子の左辺が省略された場合は、デフォルト変数が使用されます。

<pre>
for (@values) {
  s/cat/dog/;
}
</pre>

これはデフォルト変数を明示的に書いた場合と同じ意味になります。

<pre>
for (@values) {
  $_ =~ s/cat/dog/;
}
</pre>
