<ol class="bread" itemscope itemtype="http://schema.org/BreadcrumbList">
  <li itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem">
    <a itemprop="item" href="/">
        <span itemprop="name">Perl</span></a>
    <meta itemprop="position" content="1" />
  </li>
  &#8250;
  <li itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem">
    <a itemprop="item" href="/blog/20161115147930.html">
        <span itemprop="name">CPAN</span></a>
    <meta itemprop="position" content="2" />
  </li>
</ol>
<h2>metaCPAN APIを利用してモジュールの情報を取得する</h2>



モジュール名とバージョンを指定して、ファイルを自動的に取得するということは、今までのCPANだととても困難だったですが、metaCPANの登場によってこの状況は変わりそうです。変わりそうというのは、まだmetaCPANのAPIがベータバージョンだからですね。

それでも、metaCPANのAPIは今でも便利です。APIはバージョンごとに管理されるようなので、後方互換性も保たれるような予感です。

<h3>情報の取得</h3>

以下のようにして情報を取得できます。

<ul>
  <li>
    http://api.metacpan.org/v0/release/_search?q=name:DBIx-Custom-0.2107&fields=download_url,name
  </li>
</ul>

実際にアクセスしてみると、JSON形式で情報が返されます。<b>download_url</b>を見てみると、実際にファイルのある場所のURLがわかります。

<h3>少しだけ解説</h3>

これはWebAPIでJSON形式のデータです。<b>q</b>で検索条件を設定できます。<b>name</b>がDBIx-Custom-0.2107のものを検索しています。<b>fields</b>で、取得したいデータの項目を指定することができます。これはカンマ区切りで指定することができるようです。

またすばらしいことにmetaCPANという名前だけあって、CPANとBackPANにある両方の情報を統一的に扱うことができます。つまり、たとえCPANからディストリビューションが削除されたとしても、metaCPANを使えば、その情報にアクセスすることができます。

metaCPANでCPANがさらに便利になる。最近ますます便利になってきているPerlですね。

