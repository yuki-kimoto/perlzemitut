
<h2>@INC問題、モジュールパスの先頭にカレントディレクトリ「.」があるとどんな危険があるのか考えてみた</h2>

Perl 5.26ではモジュールの検索パスである@INCの先頭からカレントディレクトリ「.」が削除される。セキュリティ対策のためという説明があるのだけれど、実際にどんな場面で危険があるのかということを考えてみた。

<h3>他のユーザーが書き込み可能なディレクトリをカレントディレクトリにした場合が危ない</h3>

たとえば次のスクリプト(test.pl)を考えてみよう。

<pre>
chdir '/tmp';

require File::Path;
</pre>

このスクリプトは「/tmp」というディレクトリにカレントディレクトリをまず変更している。

<b>ここで重要なことは「/tmp」というディレクトリは、他のユーザーも読み書きできるということだ。</b>

他のユーザーが、書き込み可能であるということは「Find/Path.pm」というファイルを置くことができるということだ。(参考:<a href="/blog/20100409127089.html">File::Path</a>)

モジュールの読み込みパスの先頭にカレントディレクトリ「.」が存在する場合は、まず最初に、カレントディレクトリに存在するモジュールを読み込もうとする。

するとこのスクリプトはカレントディレクトリである「/tmp」に存在する「Find/Path.pm」を読もうとする。

「Find/Path.pm」の中身を、攻撃用のプログラムにすれば「test.pl」は意図せずに「/tmp」の中の「Find/Path.pm」を実行してしまうことになる。

これは「信用できない検索パスの脆弱性」という問題のようだ。

<ul>
  <li>
    <a href="https://www.ipa.go.jp/security/fy21/reports/tech1-tg/a_01.html">情報セキュリティ技術動向調査（2009 年上期）「信用できない検索パスの脆弱性」</a>
  </li>
</ul>

「/tmp」以外でも他のユーザーが書き込み可能なディレクトリをカレントディレクトリにするようなスクリプトは、この脆弱性を持つといえる。

<h3>追記</h3>

何回も「.」が@INCの先頭に追加されていると書いてきましたが、<b>「.」が末尾に追加されている</b>の間違いでした。Twitterで指摘をもらいました。

