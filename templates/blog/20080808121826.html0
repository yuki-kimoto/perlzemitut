<ol class="bread" itemscope itemtype="http://schema.org/BreadcrumbList">
  <li itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem">
    <a itemprop="item" href="/">
      <span itemprop="name">Perl</span></a>
    <meta itemprop="position" content="1" />
  </li>
  &#8250;
  <li itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem">
    <a itemprop="item" href="/blog/20110212130370.html">
      <span itemprop="name">ファイル入出力</span></a>
    <meta itemprop="position" content="2" />
  </li>
  &#8250;
  <li itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem">
    <span itemprop="name">here</span>
  </li>
</ol>
<h2>シーケンシャルアクセスとランダムアクセス</h2>


ファイルにアクセスする方法には、シーケンシャルアクセスとランダムアクセスという2種類の方法があります。

シーケンシャルアクセスとは、ファイルを先頭から順番に読み込んでいくアクセスのことで、ランダムアクセスとは、ファイルの特定のバイト位置を指定するアクセスのことです。

シーケンシャルアクセスは、可変長のテキストファイルを扱う場合に利用され、ランダムアクセスは固定長バイナリファイル高速に処理する場合に利用されます。

<h3>シーケンシャルアクセスとは</h3>

シーケンシャルアクセスは順次アクセスとも呼ばれます。シーケンシャルアクセスとは、ファイルを先頭から順番に読み込んでいくアクセス方法のことです。ファイルを<a href="/blog/20080718121643.html">open関数</a>でオープンして、<a href="/blog/20180424152457.html">readline関数</a>で1行づつ読み込んでいくのは、シーケンシャルアクセスになります。テキストファイルは、この方法でアクセスします。

シーケンシャルアクセスの欠点としては、たとえば、変更したい部分がファイルの1万行目にあった場合は、必要のない9999行を読み込む必要があることです。高速にアクセスする必要があるときは、シーケンシャルアクセスは向いていません。

ただ、改行を区切り文字とするような可変長のテキストファイルを扱う場合はシーケンシャルアクセスしか利用できません。

<h3>ランダムアクセスとは</h3>

ランダムアクセスとは、ファイルのなかの特定のバイト位置を指定しておこなうファイルアクセス方法のことです。たとえば、「10バイト目から8バイト」のように指定します。ランダムアクセスという名前ですが、ランダムにアクセスするという意味はありません。バイト位置を指定したアクセスを意味します。

<pre>
|---------------------------------------|
|    |         |データ|        |        |
|----+---------+------+--------+--------|
</pre>

上記の「データ」が先頭から10バイト目で、8バイトのデータならば、その位置を指定することで、直接アクセスすることができます。

バイト位置を直接指定できるので、ファイルへのアクセスが非常に高速になります。シーケンシャルアクセスのように、余分な部分を読み込む必要がないからです。ただし、特定のバイト位置を指定してファイルにアクセスするためには、ファイルを固定長のデータを扱うように設計しなければなりません。ファイルが可変長であれば、特定の位置を指し示すことができないからです。

<h3>シーケンシャルアクセスとランダムアクセスの比較</h3>

<table>
  <tr>
    <td>
      　
    </td>
    <td>
      <span style="font-weight:bold;">シーケンシャルアクセス</span>
    </td>
    <td>
      <span style="font-weight:bold;">ランダムアクセス</span>
    </td>
  </tr>

  <tr>
    <td>
      <span style="font-weight:bold;">アクセス方法</span>
    </td>
    <td>
      順次読み込み
    </td>
    <td>
      バイト位置の指定
    </td>
  </tr>

  <tr>
    <td>
      <span style="font-weight:bold;">主な用途</span>
    </td>
    <td>
      テキストファイルの読み込み
    </td>
    <td>
      速度が要求されるアプリケーション
    </td>
  </tr>

  <tr>
    <td>
      <span style="font-weight:bold;">速度</span>
    </td>
    <td>
      データが後ろにあるほど低速
    </td>
    <td>
      直接アクセスできるため高速
    </td>
  </tr>

  <tr>
    <td>
      <span style="font-weight:bold;">ファイル設計</span>
    </td>
    <td>
      可変長データでも可
    </td>
    <td>
      固定長データ
    </td>
  </tr>

</table>
