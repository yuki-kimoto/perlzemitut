<ol class="bread" itemscope itemtype="http://schema.org/BreadcrumbList">
  <li itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem">
    <a itemprop="item" href="/">
        <span itemprop="name">Perl</span></a>
    <meta itemprop="position" content="1" />
  </li>
  &#8250;
  <li itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem">
    <a itemprop="item" href="/blog/20161005147566.html">
      <span itemprop="name">演算子</span></a>
    <meta itemprop="position" content="2" />
  </li>
  &#8250;
  <li>
      <span itemprop="name">here</span>
  </li>
</ol>
<h2>Perlのリスト</h2>



<strong>リスト</strong>とは複数の値の並びを表現したものです。

<pre>
# リスト
('a', 'b', 'c', 'd')
</pre>

リストは<a href="/blog/20161012147627.html">配列</a>や<a href="/blog/20161013147635.html">ハッシュ</a>に代入して、初期化に利用できます。

<pre>
# 配列への代入
my @array = ('a', 'b', 'c', 'd');

# ハッシュへの代入
my %hash = ('a', 'b', 'c', 'd');
</pre>

<h3>配列とリストの違い</h3>

配列とリストは、似ていますが、実際にはいくつか異なる部分があります。

一つ目の違いは、言語的な意味での違いです。配列は変数であり、リストは表記法であるということです。

二つ目は、<a href="/blog/20080608121292.html">スカラコンテキスト</a>で評価された場合に値が異なるということです。

次のコードを見てください。「$num1」と「$num2」はどうなると思いますか?

<pre>
# スカラコンテキストでリストを評価
my $num1 = (5, 6, 7);

# スカラコンテキストで配列を評価
my @nums = (5, 6, 7);
my $num2 = @nums;

</pre>

答えは「$num1」は「7」になり、$num2は「3」になります。

スカラコンテキストで、リストを評価すると「リストの最後の値」が返り、配列を評価すると「配列の個数」が返るからです。

<h3>ハッシュ用のリストの表記法</h3>

ハッシュに代入を行うために、「=>」を使用した簡易記法が用意されています。

<pre>
# ハッシュ用の記法
my %hash = (a => 'b', c => 'd');
</pre>

記法が異なるだけで通常のリストとまったく同じ意味です。=>の左側の文字列については英数字とアンダーバーのみで構成される場合にシングルクォートを省略することができます。シングルクォートを省略する記法が好んで用いられます。

<h3>リスト代入</h3>

リストを左辺に使うことによってリスト代入を行うことができます。複数の値を、複数の変数に代入できます。

<pre>
my ($var1, $var2) = (3, 5);
</pre>

<a href="/blog/20080108132865.html">コマンドライン引数</a>の受け取りや、<a href="/blog/20101130129876.html">サブルーチン</a>での引数の受け取りで、リスト代入を使うことができます。

<pre>
# コマンドライン引数の受け取り
my ($var1, $var2) = @ARGV;

# サブルーチンでの引数の受け取り
sub foo {
  my ($var1, $var2) = @_;
  ...
}
</pre>

これは使用頻度が高いので、ぜひ覚えておきましょう。

<h3>文字列リスト演算子</h3>

文字列リスト演算子を使用すると、文字列のリストを簡単に表現することができます。

<pre>
qw(Cat Mouse Dog)
</pre>

文字列リスト演算子の詳しい解説については以下の記事を参考にしてください。

<ul>
  <li>
    <a href="/blog/20080222120369.html">文字列リスト演算子</a>
  </li>
</ul>

<h3>空のリストによる自動的な初期化</h3>

配列とハッシュは宣言されると同時に、空のリストによって初期化されます。

<pre>
# 以下は同じ
my @nums;
my @nums = ();
</pre>

<pre>
# 以下は同じ
my %score;
my %score = ();
</pre>

