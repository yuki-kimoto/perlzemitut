
<h2>YAPC::Kansaiでのメールフォームのリファクタリングは僕ならどう書くかな</h2>

3月4日はYAPC::Kansaiが新大阪でありましたね。熱気と楽しみに盛り上がっていましたね!!! 今週中には、自分のプレゼンテーションをアップしようと思っています。

ところで弾さんが実演でメールフォームのリファクタリングやってましたけど、僕ならどう書くかなぁって考えてました。

<h3>メール送信はMIME::LiteかEmail::Senderで置き換える</h3>

メール送信はCPANモジュールを使って<a href="http://search.cpan.org/~rjbs/MIME-Lite-3.030/lib/MIME/Lite.pm">MIME::Lite</a>か<a href="http://search.cpan.org/~rjbs/Email-Sender-1.300030/lib/Email/Sender.pm">Email::Sender</a>で置き換えるのがいいんじゃないかな。

どちらもsendmailを簡単に使うためのラッパーになっているよ。それ以外の送信方法もあるけど、デフォルトはsendmailを使う。

MIME::Liteは開発が終わっちゃたんだけど、ちょっと使う分には今でもやっぱりこれが便利ね。Eメールモジュール開発コミュニティの意向にそうのであれば、Email::Senderを使うのがいいんじゃないかな。

<h3>メールのバリデーションはEmail::Valid::Loose</h3>

メールのバリデーションは簡単にやるなら<a href="/blog/20100827127859.html">正規表現</a>で「アスキー文字@アスキー文字」っていう正規表現を書くと思う。

CPANモジュールを使ってやるなら<a href="http://perldoc.jp/docs/modules/Email-Valid-Loose-0.02/Email/Valid/Loose.pod">Email::Valid::Loose</a>がいいんじゃないかな。日本の携帯電話のEmailは、メールの仕様を一部満たしていないようで、このモジュールはそれに対応している。

本当に正しいメールをフォームの時点で判定するよりは、ゆるやかに受け入れておいて、そのあとにバッチ処理とかで、無効なメールを処理するなんて方法もよいかもね。

<h3>送信フォームの部分はMojoliciousのテンプレートで</h3>

cgi-lib.plを使って、HTMLをprintして送るというのはちょっと辛いものがあるね。HTMLはMojoliciouのテンプレートで書いて、CGI対応させるとよい。MojoliciousはCGIに対応しているから、CGIフォームの書き換えがそのままできるよ。

CGIの出力フォーマットに合うデータをMojoliciousが書き出してくれる。

<h3>10年耐えられるメールフォームになる</h3>

本編では3日くらいしか耐えられなさそうだったけど、この三つをやると10年耐えられるようになると思うよ。

