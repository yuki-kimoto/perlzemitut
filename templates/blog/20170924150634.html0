<ol class="bread" itemscope itemtype="http://schema.org/BreadcrumbList">
  <li itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem">
    <a itemprop="item" href="/">
        <span itemprop="name">Perl</span></a>
    <meta itemprop="position" content="1" />
  </li>
  &#8250;
  <li itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem">
    <a itemprop="item" href="/blog/20161005147566.html">
      <span itemprop="name">演算子</span></a>
    <meta itemprop="position" content="2" />
  </li>
  &#8250;
  <li itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem">
      <span itemprop="name">here</span>
  </li>
</ol>
<h2>無名配列生成子 [] - 配列のリファレンスを簡単に作成</h2>



Perlには<b>無名配列生成子</b>「[]」という演算子があります。名前はちょっと難しいですが、実用的には、簡単に配列のリファレンスを作成するためのものです。

無名配列生成子を使うと、以下のように簡単に<a href="/blog/20180214151861.html">配列のリファレンス</a>が作成できます。

<pre>
# 無名配列生成子
my $nums = [1, 2, 3];
</pre>

もし無名配列生成子を使わない場合は、次のように書きます。まず<a href="/blog/20161012147627.html">配列</a>を作成してから、リファレンス生成子を使って、配列のリファレンスを作成します。

<pre>
# 無名配列生成子を使わない場合
my @nums = (1, 2, 3);
my $nums = \@nums;
</pre>

無名配列生成子を使うと、上の処理を省略して書くことができるんです。[1, 2, 3]を見た時は、上の処理が省略されているという感覚を持つと理解しやすいと思います。

<b>どうして「無名配列生成子」というの?</b>

無名配列生成子を使うと「@nums」という配列を作成する必要がありませんね。つまり、内部的に「@nums」に該当する「無名の配列」が作成されているのです。

きっと、この部分に焦点を当てて命名されたのでしょう。

無名配列生成子に対応して<a href="/blog/20170926150643.html">無名ハッシュ生成子</a>というものあります。

