<ol class="bread" itemscope itemtype="http://schema.org/BreadcrumbList">
  <li itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem">
    <a itemprop="item" href="/">
        <span itemprop="name">Perl</span></a>
    <meta itemprop="position" content="1" />
  </li>
  &#8250;
  <li itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem">
    <a itemprop="item" href="/blog/20161005147566.html">
      <span itemprop="name">演算子</span></a>
    <meta itemprop="position" content="2" />
  </li>
  &#8250;
  <li>
      <span itemprop="name">here</span>
  </li>
</ol>
<h2>「=~」 - パターンマッチ演算子</h2>



「=~」は「パターンマッチ演算子」と呼ばれ、<a href="/blog/20100827127859.html">正規表現</a>でパターンマッチと置換を行うときに利用します。

<h3>パターンマッチ</h3>

文字列が、指定した正規表現を含むかどうかを調べるには次のようにします。

<pre>
$message =~ /play/
</pre>

$string =~ /正規表現/。$string が 正規表現を含んでいれば、0以外が返ります。=~ を、パターンマッチ演算子と呼びます。今回の例では、正規表現を使わずに play という文字を使っています。

<h3>パターンマッチしない</h3>

文字列が、指定した正規表現を含まないかを調べるには次のようにします。

<pre>
$message !~ /you/
</pre>

$string !~ /正規表現/。$string が 正規表現を含んでいなければ、0以外が返ります。

<h3>置換</h3>

正規表現によって文字列を置換するには次のようにします。

<pre>
$message =~ s/tennis/baseball/;
</pre>

$string =~ s/正規表現/置換する文字列/。$string が、正規表現を含んでいれば、指定した文字列で置き換えます。$message そのものが、置き換わります。

<h3>サンプル</h3>

正規表現によるパターンマッチと置換とサンプルです。

<pre>
use strict;
use warnings;

# 正規表現によるパターンマッチと置換

my $message = 'I play tennis.';
print "\$message = '$message' \n\n";

# パターンマッチの基本( $var =~ /正規表現/ ) ( ここでは、単なる文字列( play )で説明 )
print "1: 文字列が、 play を含んでいるかどうかを調べる。\n";
if ($message =~ /play/) {
  print "\$message は、playを含んでいます。\n\n";
}

print "2: 文字列が、youを含んでいないかどうかを調べる。\n";
if ($message !~ /you/) {
  print "\$message は、youを含んでいません。\n\n";
}

# 置換の基本
print "3: 文字列の tennis を baseball に置換する。\n";

# $var =~ s/正規表現/置換する文字列/
$message =~ s/tennis/baseball/;

print "$message\n";
</pre>
