
<h2>Perl 5.28リリース - Unicode 10.0サポート、文字列連結の高速化、ref関数、keys関数、forループの高速化</h2>

<a href="http://f.hatena.ne.jp/perlcodesample/20180626074702"><img src="https://cdn-ak.f.st-hatena.com/images/fotolife/p/perlcodesample/20180626/20180626074702.png" alt="20180626074702"></a>

Perl 5.28が2018年6月22日にリリースされました。Perl 5.28でうれしい機能をピックアップして紹介。

<h4>Unicode 10.0サポート</h4>

<a href="https://internet.watch.impress.co.jp/docs/news/1066482.html">Unicode 10.0</a>がサポートされました。56種類の新しい絵文字が使えるようです。

<h4>文字列連結の高速化</h4>

複数の文字列連結が、高速化されました。内部的にmulticoncatという一つのオペコードで処理するようになったからです。

以下のようなコードが高速化されます。

<pre>
    $s .= "a=$a b=$b\n"
</pre>


たとえば、x86_64のシステムでは、以下の文字列連結のコードが4倍高速化されます。

<pre>
    my $s;
    my $a = "ab\x{100}cde";
    my $b = "fghij";
    my $c = "\x{101}klmn";

    for my $i (1..10_000_000) {
        $s = "\x{100}wxyz";
        $s .= "foo=$a bar=$b baz=$c";
    }
</pre>

さらに加えて定数文字列を含むsprintfもmulticoncatを使って、最適化されています。

<h4>ref関数の高速化</h4>

真偽値コンテキストではref関数がかなり速くなりました。真偽値コンテキストでは、一時的な文字列を作成しなくなったからです。

<h4>keys関数の高速化</h4>

keys関数は、スカラコンテキストでより最適化されました。

<h4>forループの高速化</h4>

forループとそれに類似した構文は、ほとんどのケースで、より効率的になりました。
 
<h4>perl -iによる置換が安全に</h4>

perl -iによるファイル内容の置換は、編集中はバックアップがとられるようになり、安全になりました。

<h4>Cent OS 5でインストールできないバグを修正</h4>

Perl 5.26はCent OS 5にインストールできませんでしたが、Perl 5.28では、インストールできるようになっています。僕の環境でも試して、インストールできることを確認!

<h4>実験的なサブルーチンシグネチャにおける属性の位置が変更</h4>

実験的なサブルーチンシグネチャにおける属性の位置が変更されました。

<pre>
変更前 sub foo ($foo, $bar) : attr;
変更後 sub foo : attr ($foo, $bar)
</pre>

<h3>互換性のない変更</h3>

<h4>PerlはC89が必須に</h4>

PerlのコンパイルにはC89がコンパイルできるコンパイラが必須になりました。C99やC11ではないので、見間違わないでね。

<h4>${^ENCODING}への値の設定は不正になりました</h4>

もし過去に、${^ENCODING}を設定している方がいればご注意。

<h4>sortプラグマによるsortアルゴリズムが指定できなくなりました</h4>

sortプラグマによるsortアルゴリズムが指定できなくなりました。常に、Perlデフォルトのsortアルゴリズムが使用されます。

<h3>Perl 5.28リリース雑感</h3>

今回のリリースは、小さなパフォーマンス改善が中心となるリリースに感じます。文字列のパフォーマンス改善は、すべてのPerlユーザーのメリットになるので、とてもうれしい。

最近のPerlでは、真偽値コンテキストのリファクタリングがされていて、文字列を返さなくって良い場所では、1が返されるようになって、これが高速化につながっている。

まだまだ息の長いCent OS 5にも最新のPerlがインストールできるようになって「一度書けば、Perlどこでも動くよ」って感じですね。

