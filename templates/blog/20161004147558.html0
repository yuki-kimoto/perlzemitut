<ol class="bread" itemscope itemtype="http://schema.org/BreadcrumbList">
  <li itemprop="itemListElement" itemscope itemtype="http://schema.org/ListItem">
    <a itemprop="item" href="/">
        <span itemprop="name">Perl</span></a>
    <meta itemprop="position" content="1" />
  </li>
  &#8250;
  <li>
    here
  </li>
</ol>
<h2>Perlの標準関数</h2>

Perlの標準関数の一覧です。標準関数とはPerlで初めから用意されている関数のことです。関数の呼び出し方、引数の渡し方、戻り値の受け取り方について解説しています。リファレンス的なものとしてご利用ください。

<h3>文字列</h3>

<a href="/blog/20161003147558.html">文字列</a>を処理するために使う関数。

<table>
  <tr>
    <td>
      <a href="/blog/20081007122338.html">join</a>
    </td>
    <td>
      区切り文字を指定して文字列を連結
    </td>
  </tr>

  <tr>
    <td>
      <a href="/blog/20080926122245.html">length</a>
    </td>
    <td>
      文字列の長さを取得
    </td>
  </tr>

  <tr>
    <td>
      <a href="/blog/20080224120386.html">substr</a>
    </td>
    <td>
      文字列の切り出しと置換
    </td>
  </tr>

  <tr>
    <td>
      <a href="/blog/20080225120395.html">index</a>
    </td>
    <td>
      文字の検索
    </td>
  </tr>

  <tr>
    <td>
      <a href="/blog/20100321126967.html">rindex</a>
    </td>
    <td>
      文字の検索(末尾から)
    </td>
  </tr>

  <tr>
    <td>
      <a href="/blog/20080301120434.html">split</a>
    </td>
    <td>
      文字列を区切り文字を指定して分割
    </td>
  </tr>

  <tr>
    <td>
      <a href="/blog/20080227120413.html">reverse</a>
    </td>
    <td>
      文字列を逆順にする
    </td>
  </tr>

  <tr>
    <td>
      <a href="/blog/20080903122057.html">uc</a>
    </td>
    <td>
      大文字に変換
    </td>
  </tr>

  <tr>
    <td>
      <a href="/blog/20100325127089.html">ucfirst</a>
    </td>
    <td>
      先頭の文字を大文字に変換
    </td>
  </tr>

  <tr>
    <td>
      <a href="/blog/20100326127089.html">lc</a>
    </td>
    <td>
      小文字に変換
    </td>
  </tr>

  <tr>
    <td>
      <a href="/blog/20100327127089.html">lcfirst</a>
    </td>
    <td>
      先頭の文字を小文字に変換
    </td>
  </tr>

  <tr>
    <td>
      <a href="/blog/20081001122296.html">sprintf</a>
    </td>
    <td>
      文字列の書式指定
    </td>
  </tr>

  <tr>
    <td>
      <a href="/blog/20080226120403.html">chomp</a>
    </td>
    <td>
      改行を削除
    </td>
  </tr>

  <tr>
    <td>
      <a href="/blog/20080928122260.html">chr</a>
    </td>
    <td>
      数値をASCII文字に変換
    </td>
  </tr>

  <tr>
    <td>
      <a href="/blog/20080929122278.html">ord</a>
    </td>
    <td>
      ASCII文字を数値に変換
    </td>
  </tr>

  <tr>
    <td>
      <a href="/blog/20171027150945.html">oct</a>
    </td>
    <td>
      8進数の変換
    </td>
  </tr>

  <tr>
    <td>
      <a href="/blog/20171026150980.html">hex</a>
    </td>
    <td>
      16進数の変換
    </td>
  </tr>

  <tr>
    <td>
      <a href="/blog/20080927122253.html">crypt</a>
    </td>
    <td>
      ダイジェストを作成してパスワード照合する
    </td>
  </tr>

</table>

<h3>正規表現</h3>

<a href="/blog/20100827127859.html">正規表現</a>に関する関数。

<table>
  <tr>
    <td>
      <a href="/blog/20100329127089.html">quotemeta</a>
    </td>
    <td>
      正規表現のエスケープ
    </td>
  </tr>

</table>

<span id="array"></span>

<h3>配列操作</h3>

<a href="/blog/20161012147627.html">配列</a>を操作するための関数。

<table>
  <tr>
    <td>
      <a href="/blog/20100104126425.html">shift</a>
    </td>
    <td>
      配列の要素の最初を取り出す
    </td>
  </tr>

  <tr>
    <td>
      <a href="/blog/20100105126425.html">unshift</a>
    </td>
    <td>
      配列の先頭に要素を追加
    </td>
  </tr>

  <tr>
    <td>
      <a href="/blog/20100106126425.html">pop</a>
    </td>
    <td>
      配列の最後の要素を取り出す
    </td>
  </tr>

  <tr>
    <td>
      <a href="/blog/20100107126425.html">push</a>
    </td>
    <td>
      配列の末尾に要素と追加
    </td>
  </tr>

  <tr>
    <td>
      <a href="/blog/20080127120141.html">splice</a>
    </td>
    <td>
      配列の要素の詳細な操作
    </td>
  </tr>

  <tr>
    <td>
      <a href="/blog/20100119126425.html">grep</a>
    </td>
    <td>
      条件にマッチした要素を取り出す
    </td>
  </tr>

  <tr>
    <td>
      <a href="/blog/20100118126425.html">map</a>
    </td>
    <td>
      値をマッピングする
    </td>
  </tr>

  <tr>
    <td>
      <a href="/blog/20100110126528.html">sort</a>
    </td>
    <td>
      並び替え
    </td>
  </tr>

  <tr>
    <td>
      <a href="/blog/20080227120413.html">reverse</a>
    </td>
    <td>
      配列の順序を逆順にする
    </td>
  </tr>

</table>

<span id="hash"></span>

<h3>ハッシュ操作</h3>

<a href="/blog/20161013147635.html">ハッシュ</a>を操作するための関数。

<table>
  <tr>
    <td>
      <a href="/blog/20080210120265.html">keys</a>
    </td>
    <td>
      ハッシュのキーの一覧を取得
    </td>
  </tr>

  <tr>
    <td>
      <a href="/blog/20100222126425.html">values</a>
    </td>
    <td>
      ハッシュの値の一覧を取得
    </td>
  </tr>

  <tr>
    <td>
      <a href="/blog/20080212120283.html">each</a>
    </td>
    <td>
      ハッシュのキーと値を順番に取り出す
    </td>
  </tr>

  <tr>
    <td>
      <a href="/blog/20080213120291.html">exists</a>
    </td>
    <td>
      ハッシュのキーの存在確認
    </td>
  </tr>

  <tr>
    <td>
      <a href="/blog/20080214120300.html">delete</a>
    </td>
    <td>
      ハッシュのキーと値の削除
    </td>
  </tr>

  <tr>
    <td>
      <a href="/blog/20080227120413.html">reverse</a>
    </td>
    <td>
      ハッシュのキーと値を入れ替える
    </td>
  </tr>

</table>

<span id="subroutine"></span>

<h3>サブルーチン</h3>

<a href="/blog/20101130129876.html">サブルーチン</a>に関する関数。

<table>
  <tr>
    <td>
      <a href="/blog/20080610121319.html">wantarray</a>
    </td>
    <td>
      コンテキストの判定
    </td>
  </tr>

  <tr>
    <td>
      <a href="/blog/20080424120904.html">caller</a>
    </td>
    <td>
      呼び出し元の情報
    </td>
  </tr>

  <tr>
    <td>
      <a href="/blog/20171111151040.html">return</a>
    </td>
    <td>
      戻り値を返す
    </td>
  </tr>

</table>

<span id="fileio"></span>

<h3>ファイル入出力</h3>

<a href="/blog/20110212130370.html">ファイル入出力</a>を行うときに利用する関数。

<table>
  <tr>
    <td>
      <a href="/blog/20170404149131.html">print</a>
    </td>
    <td>
      文字列の出力
    </td>
  </tr>

  <tr>
    <td>
      <a href="/blog/20170326149148.html">printf</a>
    </td>
    <td>
      書式付き文字列の出力
    </td>
  </tr>

  <tr>
    <td>
      <a href="/blog/20080718121643.html">open</a>
    </td>
    <td>
      ファイルオープン
    </td>
  </tr>

  <tr>
    <td>
      <a href="/blog/20160312145776.html">close</a>
    </td>
    <td>
      ファイルクローズ
    </td>
  </tr>

  <tr>
    <td>
      <a href="/blog/20080804121794.html">sysopen</a>
    </td>
    <td>
      低レベルファイルオープン
    </td>
  </tr>

  <tr>
    <td>
      <a href="/blog/20080725121700.html">getc</a>
    </td>
    <td>
      一文字取得
    </td>
  </tr>

  <tr>
    <td>
      <a href="/blog/20100204126425.html">binmode</a>
    </td>
    <td>
      オープンモードの変更
    </td>
  </tr>

  <tr>
    <td>
      <a href="/blog/20080814121872.html">flock</a>
    </td>
    <td>
      ファイルロック
    </td>
  </tr>

  <tr>
    <td>
      <a href="/blog/20171002150691.html">opendir</a>
    </td>
    <td>
      ディレクトリオープン
    </td>
  </tr>

  <tr>
    <td>
      <a href="/blog/20171001150694.html">closedir</a>
    </td>
    <td>
      ディレクトリクローズ
    </td>
  </tr>

  <tr>
    <td>
      <a href="/blog/20171003150703.html">readdir</a>
    </td>
    <td>
      ディレクトリの読み込み
    </td>
  </tr>

  <tr>
    <td>
      <a href="/blog/20180618152932.html">read</a>
    </td>
    <td>
      ファイルからバイト数を指定して読み込み
    </td>
  </tr>

  <tr>
    <td>
      <a href="/blog/20180617152932.html">sysread</a>
    </td>
    <td>
      ファイルからバイト数を指定して読み込み(バッファリングなし)
    </td>
  </tr>

  <tr>
    <td>
      <a href="/blog/20180616152932.html">syswrite</a>
    </td>
    <td>
      ファイルにバイト数を指定して書き込み(バッファリングなし)
    </td>
  </tr>
|
</table>

<h3>値の定義</h3>

値の定義に関する関数。

<table>
  <tr>
    <td>
      <a href="/blog/20100220126425.html">undef</a>
    </td>
    <td>
      未定義値の取得と設定
    </td>
  </tr>

  <tr>
    <td>
      <a href="/blog/20100219126425.html">defined</a>
    </td>
    <td>
      値が定義されているかどうかを確認
    </td>
  </tr>

</table>

<span id="string"></span>

<h3>コンテキスト</h3>

<table>
  <tr>
    <td>
      <a href="/blog/20180611152872.html">scalar関数</a>
    </td>
    <td>
      スカラコンテキストで評価
    </td>
  </tr>

</table>

<h3>ファイル操作</h3>

<a href="/blog/20161126148016.html">ファイル・ディレクトリの作成・削除</a>など行う関数。

<table>
  <tr>
    <td>
      <a href="/blog/20080520121125.html">unlink</a>
    </td>
    <td>
      ファイルの削除
    </td>
  </tr>

  <tr>
    <td>
      <a href="/blog/20080528121197.html">chdir</a>
    </td>
    <td>
      カレントディレクトリの変更
    </td>
  </tr>

  <tr>
    <td>
      <a href="/blog/20080523121155.html">mkdir</a>
    </td>
    <td>
      ディレクトリの作成
    </td>
  </tr>

  <tr>
    <td>
      <a href="/blog/20080526121181.html">rmdir</a>
    </td>
    <td>
      ディレクトリの削除
    </td>
  </tr>

  <tr>
    <td>
      <a href="/blog/20080821121933.html">chmod</a>
    </td>
    <td>
      パーミッションの変更
    </td>
  </tr>

  <tr>
    <td>
      <a href="/blog/20080512121060.html">stat</a>
    </td>
    <td>
      ファイル情報の取得
    </td>
  </tr>

  <tr>
    <td>
      <a href="/blog/20160314145796.html">fileno</a>
    </td>
    <td>
      ファイルディスクリプタの取得
    </td>
  </tr>
|
  <tr>
    <td>
      <a href="/blog/20080529121207.html">glob</a>
    </td>
    <td>
      ファイルの一覧取得
    </td>
  </tr>

  <tr>
    <td>
      <a href="/blog/20080824121967.html">umask</a>
    </td>
    <td>
      マスクの設定
    </td>
  </tr>

  <tr>
    <td>
      <a href="/blog/20080426120922.html">__LINE__</a>
    </td>
    <td>
      行番号の取得
    </td>
  </tr>

  <tr>
    <td>
      <a href="/blog/20080427120926.html">__FILE__</a>
    </td>
    <td>
      ファイル名の取得
    </td>
  </tr>

  <tr>
    <td>
      <a href="/blog/20190308074548.html">__DATA__</a>
    </td>
    <td>
      データセクション
    </td>
  </tr>

</table>

<span id="datetime"></span>

<h3>日付・時刻</h3>

<a href="/blog/20091105124627.html">日付・時刻</a>を操作する関数。

<table>
  <tr>
    <td>
      <a href="/blog/20081008122347.html">time</a>
    </td>
    <td>
      現在の時刻
    </td>
  </tr>

  <tr>
    <td>
      <a href="/blog/20081009122357.html">localtime</a>
    </td>
    <td>
      現在の時刻(ロケールあり)
    </td>
  </tr>

  <tr>
    <td>
      <a href="/blog/20170522149546.html">sleep</a>
    </td>
    <td>
      指定した時間スリープする
    </td>
  </tr>

</table>

<h3>数学関数</h3>

数学関数。

<table>
  <tr>
    <td>
      <a href="/blog/20080912122145.html">abs</a>
    </td>
    <td>
      絶対値
    </td>
  </tr>

  <tr>
    <td>
      <a href="/blog/20080630121483.html">sqrt</a>
    </td>
    <td>
      平方根
    </td>
  </tr>

  <tr>
    <td>
      <a href="/blog/20080923122214.html">int</a>
    </td>
    <td>
      整数部の取得
    </td>
  </tr>

  <tr>
    <td>
      <a href="/blog/20080924122227.html">ceil</a>
    </td>
    <td>
      小数点の切り上げ
    </td>
  </tr>

  <tr>
    <td>
      <a href="/blog/20090430122227.html">floor</a>
    </td>
    <td>
      小数点の切り下げ
    </td>
  </tr>

  <tr>
    <td>
      <a href="/blog/20080906122079.html">rand</a>
    </td>
    <td>
      ランダムな値
    </td>
  </tr>

  <tr>
    <td>
      <a href="/blog/20090501124313.html">looks_like_number</a>
    </td>
    <td>
      数値の判定
    </td>
  </tr>

  <tr>
    <td>
      <a href="/blog/20080913122145.html">pi</a>
    </td>
    <td>
      パイ
    </td>
  </tr>

  <tr>
    <td>
      <a href="/blog/20080914122145.html">deg2rad</a>
    </td>
    <td>
      角度の変換
    </td>
  </tr>

  <tr>
    <td>
      <a href="/blog/20180514122166.html">sin</a>
    </td>
    <td>
      サインを求める
    </td>
  </tr>

  <tr>
    <td>
      <a href="/blog/20180513122166.html">cos</a>
    </td>
    <td>
      コサインを求める
    </td>
  </tr>

  <tr>
    <td>
      <a href="/blog/20080919122184.html">exp</a>
    </td>
    <td>
      指数関数
    </td>
  </tr>

  <tr>
    <td>
      <a href="/blog/20080920122192.html">log</a>
    </td>
    <td>
      ログ関数
    </td>
  </tr>

  <tr>
    <td>
      <a href="/blog/20080908122097.html">srand</a>
    </td>
    <td>
      再現可能な乱数
    </td>
  </tr>

</table>

Perlにおける数値の扱いの基本については以下の記事をご覧ください。

<ul>
  <li>
    <a href="/blog/20161026147748.html">Perlにおける数値の扱い</a>
  </li>
</ul>

<h3>オブジェクト指向</h3>

<a href="/blog/20161030147778.html">オブジェクト指向</a>に関わる関数。

<table>
  <tr>
    <td>
      <a href="/blog/20100203126425.html">bless</a>
    </td>
    <td>
      オブジェクトの生成
    </td>
  </tr>

  <tr>
    <td>
      <a href="/blog/20080425120914.html">__PACKAGE__</a>
    </td>
    <td>
      パッケージ名の取得
    </td>
  </tr>

</table>

<span id="error"></span>

<h3>例外処理</h3>

<a href="/blog/20100411127089.html">例外処理</a>で使う関数。

<table>
  <tr>
    <td>
      <a href="/blog/20100212126425.html">die</a>
    </td>
    <td>
      プログラムを終了
    </td>
  </tr>

  <tr>
    <td>
      <a href="/blog/20100213126425.html">warn</a>
    </td>
    <td>
      警告を出力
    </td>
  </tr>

  <tr>
    <td>
      <a href="/blog/20100312126967.html">eval</a>
    </td>
    <td>
      例外を補足する
    </td>
  </tr>

</table>

<span id="process"></span>

<h3>プロセス間通信</h3>

<a href="/blog/20161103147817.html">プロセス間通信</a>で使う関数。

<table>
  <tr>
    <td>
      <a href="/blog/20180124151680.html">system</a>
    </td>
    <td>
      別プロセスを実行する
    </td>
  </tr>

  <tr>
    <td>
      <a href="/blog/20090413124032.html">fork</a>
    </td>
    <td>
      フォークする
    </td>
  </tr>

  <tr>
    <td>
      <a href="/blog/20090414124049.html">wait</a>
    </td>
    <td>
      子プロセスを待つ
    </td>
  </tr>

  <tr>
    <td>
      <a href="/blog/20101222130016.html">getpwuid</a>
    </td>
    <td>
      ユーザーIDの取得
    </td>
  </tr>

  <tr>
    <td>
      <a href="/blog/20130418136633.html">getpwnam</a>
    </td>
    <td>
      ユーザー名の取得
    </td>
  </tr>

  <tr>
    <td>
      <a href="/blog/20130417136634.html">getgrnam</a>
    </td>
    <td>
      グループ名の取得
    </td>
  </tr>

  <tr>
    <td>
      <a href="/blog/20171226151430.html">kill</a>
    </td>
    <td>
      プロセスをキルする
    </td>
  </tr>

</table>

<span id="syntax"></span>

<h3>設定ファイル読み込み</h3>

<table>
  <tr>
    <td>
      <a href="/blog/20090208123289.html">do</a>
    </td>
    <td>
      設定ファイルを読み込む
    </td>
  </tr>

</table>

<h3>バイナリ処理</h3>

<table>
  <tr>
    <td>
      <a href="/blog/20171218151360.html">pack</a>
    </td>
    <td>
      データをバイナリ形式にパックする
    </td>
  </tr>

  <tr>
    <td>
      <a href="/blog/20171222151394.html">unpack</a>
    </td>
    <td>
      パックされたデータを復元する
    </td>
  </tr>

</table>

<h3>FAQ</h3>

<h4>ifやfor、foreachなどの構文などはどこで解説されていますか?</h4>

ifやfor、foreachなどの構文ついては構文の一覧の記事をご覧ください。

<ul>
  <li>
    <a href="/blog/20161022147731.html">文法・構文</a>
  </li>
</ul>

<h4>関数を自分で作成するには?</h4>

関数を自分で作成したい場合は以下の記事をご覧ください。サブルーチンという機能を使います。

<ul>
  <li>
    <a href="/blog/20101130129876.html">サブルーチンを作成する方法</a>
  </li>
</ul>
